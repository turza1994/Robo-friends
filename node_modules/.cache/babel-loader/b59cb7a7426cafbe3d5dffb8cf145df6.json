{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mazba Turza\\\\Desktop\\\\webdev\\\\project\\\\Robo-friends\\\\src\\\\App.js\";\nimport { robots } from './robots';\nimport CardList from './CardList';\nimport Searchbox from './Searchbox';\nimport ColorPicker from './ColorPicker';\nimport RandomColor from './RandomColor';\nimport Scroll from './Scroll';\nimport './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      color1: '#ff3300',\n      color2: '#ffac4d'\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onColorChange1 = this.onColorChange1.bind(this);\n    this.onColorChange2 = this.onColorChange2.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(json => this.setState({\n      robots: json\n    }));\n  }\n\n  onSearchChange(e) {\n    let name = e.target.value;\n    let filteredRobot = [];\n\n    for (let i = 0; i < robots.length; i++) {\n      if (robots[i].name.toLowerCase().includes(name.toLowerCase())) {\n        filteredRobot.push(robots[i]);\n      }\n    }\n\n    console.log(filteredRobot);\n    this.setState({\n      robots: filteredRobot\n    });\n  }\n\n  onColorChange1(e) {\n    console.log(e.target.value);\n    this.setState({\n      color1: e.target.value\n    });\n  }\n\n  onColorChange2(e) {\n    console.log(e.target.value);\n    this.setState({\n      color2: e.target.value\n    });\n  }\n\n  onClickRandomColor(e) {\n    console.log('working');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App tc\",\n      style: {\n        background: `linear-gradient(to left, ${this.state.color1} , ${this.state.color2})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"f1 fw9 b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Robo Friends\"), /*#__PURE__*/React.createElement(Searchbox, {\n      searchChange: this.onSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Change Background Color ?\"), /*#__PURE__*/React.createElement(ColorPicker, {\n      onColorChange: this.onColorChange1,\n      color: this.state.color1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ColorPicker, {\n      onColorChange: this.onColorChange2,\n      color: this.state.color2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RandomColor, {\n      onClickRandomColor: this.onClickRandomColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Scroll, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardList, {\n      robots: this.state.robots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mazba Turza/Desktop/webdev/project/Robo-friends/src/App.js"],"names":["robots","CardList","Searchbox","ColorPicker","RandomColor","Scroll","React","Component","App","constructor","state","color1","color2","onSearchChange","bind","onColorChange1","onColorChange2","componentDidMount","fetch","then","response","json","setState","e","name","target","value","filteredRobot","i","length","toLowerCase","includes","push","console","log","onClickRandomColor","render","background"],"mappings":"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","sourcesContent":["import {robots} from'./robots';\r\nimport CardList from './CardList';\r\nimport Searchbox from './Searchbox';\r\nimport ColorPicker from './ColorPicker';\r\nimport RandomColor from './RandomColor';\r\nimport Scroll from './Scroll';\r\nimport './App.css';\r\n\r\nimport React, { Component } from 'react';\r\nclass App extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            color1: '#ff3300',\r\n            color2: '#ffac4d'\r\n        }\r\n\r\n        this.onSearchChange = this.onSearchChange.bind(this);\r\n        this.onColorChange1 = this.onColorChange1.bind(this);\r\n        this.onColorChange2 = this.onColorChange2.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(json => this.setState({robots:json}));\r\n    }\r\n\r\n    onSearchChange(e){\r\n        let name = e.target.value;\r\n        let filteredRobot = [];\r\n        for(let i=0; i<robots.length; i++){\r\n            if(robots[i].name.toLowerCase().includes(name.toLowerCase())){\r\n                filteredRobot.push(robots[i]);\r\n            }\r\n        }\r\n        console.log(filteredRobot);\r\n        this.setState({robots: filteredRobot});\r\n        \r\n    }\r\n\r\n    onColorChange1(e){\r\n        console.log(e.target.value);\r\n        this.setState({color1: e.target.value});\r\n    }\r\n    onColorChange2(e){\r\n        console.log(e.target.value);\r\n        this.setState({color2: e.target.value});\r\n    }\r\n\r\n    onClickRandomColor(e){\r\n        console.log('working');\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"App tc\" style={{background: `linear-gradient(to left, ${this.state.color1} , ${this.state.color2})`}} >\r\n                <header>\r\n                    <h1 className=\"f1 fw9 b\">Robo Friends</h1>\r\n                    <Searchbox searchChange = { this.onSearchChange } />\r\n                    <h3>Change Background Color ?</h3>\r\n                    <ColorPicker onColorChange = {this.onColorChange1} color = {this.state.color1} />\r\n                    <ColorPicker onColorChange = {this.onColorChange2} color = {this.state.color2} />\r\n                    <RandomColor onClickRandomColor = {this.onClickRandomColor} />\r\n                </header>\r\n                <Scroll>\r\n                    <CardList robots={this.state.robots} />\r\n                </Scroll>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}